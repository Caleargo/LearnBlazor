
<div class="bg-light border col-5" @onclick="(args) => SelectedProduct(args, Product.Name)">
	<h4 class="text-secondary">Product - @Product.Id</h4>

	<input type="checkbox" @onchange="FavoriteUpdated"/> Add to Favourites <br /><br />

	Name - @Product.Name
	Show Properties :
	<input type="checkbox" @bind="Product.IsActive" />
	@if (Product.IsActive)
	{
		@foreach (var prodProp in Product.ProductProperties)
		{
			<p>@prodProp.Key - @prodProp.Value</p>
		}
	}
	<br />
	<_DeleteButtonComponent ProductId="@Product.Id">

	</_DeleteButtonComponent>
</div>

@code {
	[Parameter]
	public Product Product { get; set; }


	[Parameter]
	public EventCallback<bool> OnFavoriteUpdated { get; set; }

	private async Task FavoriteUpdated(ChangeEventArgs args)
	{
		await OnFavoriteUpdated.InvokeAsync((bool)(args.Value ?? false));
	}

	[Parameter]
	public EventCallback<string> OnSelectedProduct { get; set; }

	private async Task SelectedProduct(MouseEventArgs args, string productName)
	{
		await OnSelectedProduct.InvokeAsync(productName);
	}
}
